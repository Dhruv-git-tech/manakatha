import streamlit as st
from utils import (
    normalize,
    get_compliment,
    get_sentiment,
    get_rating,
    load_stories,
    save_stories,
)

st.set_page_config(
    page_title="ManaKatha ‚Äì ‡∞Æ‡∞® ‡∞ï‡∞•",
    page_icon="üìö",
    layout="centered",
)

st.title("üìö ManaKatha ‚Äì ‡∞Æ‡∞® ‡∞ï‡∞•")
st.subheader("‡∞≠‡∞æ‡∞µ‡±ã‡∞¶‡±ç‡∞µ‡±á‡∞ó‡∞æ‡∞≤‡∞®‡±Å ‡∞™‡∞Ç‡∞ö‡±Å‡∞ï‡±Å‡∞®‡±á ‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å ‡∞ï‡∞•‡∞≤ ‡∞µ‡±á‡∞¶‡∞ø‡∞ï")

# Sidebar
with st.sidebar:
    st.markdown("### ‡∞∂‡±ã‡∞ß‡∞®")
    category_filter = st.selectbox(
        "‡∞µ‡∞∞‡±ç‡∞ó‡∞Ç ‡∞™‡±ç‡∞∞‡∞ï‡∞æ‡∞∞‡∞Ç ‡∞ö‡±Ç‡∞°‡±Å",
        ["‡∞Ö‡∞®‡±ç‡∞®‡±Ä", "‡∞¨‡∞æ‡∞≤‡±ç‡∞Ø‡∞Ç", "‡∞™‡±ç‡∞∞‡±á‡∞Æ", "‡∞™‡±ã‡∞∞‡∞æ‡∞ü‡∞Ç", "‡∞´‡∞®‡±ç‡∞®‡±Ä ‡∞Æ‡±ã‡∞Æ‡±Ü‡∞Ç‡∞ü‡±ç‡∞∏‡±ç"],
    )
    show_private = st.checkbox("‡∞®‡∞æ ‡∞ï‡∞•‡∞≤‡±Å ‡∞Æ‡∞æ‡∞§‡±ç‡∞∞‡∞Æ‡±á ‡∞ö‡±Ç‡∞™‡∞ø‡∞Ç‡∞ö‡±Å", value=False)

stories = load_stories()

# Filter
if category_filter != "‡∞Ö‡∞®‡±ç‡∞®‡±Ä":
    stories = [s for s in stories if s["category"] == category_filter]
if show_private and "user_id" in st.session_state:
    stories = [s for s in stories if s.get("author") == st.session_state["user_id"]]

# Tabs
tab_share, tab_archive = st.tabs(["‚úçÔ∏è ‡∞ï‡∞• ‡∞™‡∞Ç‡∞ö‡±Å‡∞ï‡±ã‡∞Ç‡∞°‡∞ø", "üìö ‡∞ï‡∞•‡∞≤ ‡∞Ü‡∞∞‡±ç‡∞ï‡±à‡∞µ‡±ç"])

with tab_share:
    with st.form("story_form"):
        title = st.text_input("‡∞∂‡±Ä‡∞∞‡±ç‡∞∑‡∞ø‡∞ï (‡∞ê‡∞ö‡±ç‡∞ö‡∞ø‡∞ï‡∞Ç)")
        body = st.text_area("‡∞Æ‡±Ä ‡∞ï‡∞• ‡∞á‡∞ï‡±ç‡∞ï‡∞° ‡∞∞‡∞æ‡∞Ø‡∞Ç‡∞°‡∞ø...", height=250, max_chars=2000)
        category = st.selectbox(
            "‡∞µ‡∞∞‡±ç‡∞ó‡∞Ç",
            ["‡∞¨‡∞æ‡∞≤‡±ç‡∞Ø‡∞Ç", "‡∞™‡±ç‡∞∞‡±á‡∞Æ", "‡∞™‡±ã‡∞∞‡∞æ‡∞ü‡∞Ç", "‡∞´‡∞®‡±ç‡∞®‡±Ä ‡∞Æ‡±ã‡∞Æ‡±Ü‡∞Ç‡∞ü‡±ç‡∞∏‡±ç"],
        )
        is_public = st.checkbox("‡∞à ‡∞ï‡∞•‡∞®‡±Å ‡∞Ö‡∞Ç‡∞¶‡∞∞‡∞ø‡∞ï‡±Ä ‡∞ö‡±Ç‡∞™‡∞ø‡∞Ç‡∞ö‡±Å", value=True)
        submitted = st.form_submit_button("‡∞™‡∞Ç‡∞™‡∞ø‡∞Ç‡∞ö‡±Å")

    if submitted and body.strip():
        story = {
            "title": title.strip() or "‡∞∂‡±Ä‡∞∞‡±ç‡∞∑‡∞ø‡∞ï ‡∞≤‡±á‡∞¶‡±Å",
            "body": normalize(body.strip()),
            "category": category,
            "author": st.session_state.get("user_id", "guest"),
            "public": is_public,
            "compliment": get_compliment(),
            "sentiment_emoji": get_sentiment(body),
            "rating": get_rating(body),
        }
        stories.append(story)
        save_stories(stories)
        st.success("‡∞Æ‡±Ä ‡∞ï‡∞• ‡∞µ‡∞ø‡∞ú‡∞Ø‡∞µ‡∞Ç‡∞§‡∞Ç‡∞ó‡∞æ ‡∞™‡∞Ç‡∞™‡∞¨‡∞°‡∞ø‡∞Ç‡∞¶‡∞ø!")

with tab_archive:
    if not stories:
        st.info("‡∞á‡∞Ç‡∞ï‡∞æ ‡∞ï‡∞•‡∞≤‡±á‡∞Æ‡±Ä ‡∞≤‡±á‡∞µ‡±Å.")
    else:
        for idx, story in enumerate(stories):
            if not story["public"] and story.get("author") != st.session_state.get("user_id"):
                continue
            with st.expander(
                f"{story['title']} ‚Äì ‚≠ê {story['rating']} {story['sentiment_emoji']}"
            ):
                st.write(story["body"])
                st.caption(f"‡∞µ‡∞∞‡±ç‡∞ó‡∞Ç: {story['category']} | {story['compliment']}")
                # Placeholder for Likes/Comments in v2
